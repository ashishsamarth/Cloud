-----------------------------------------------------------------------------------------------------------------------------------------------------------
AWS - Development-CLI-SDK
-----------------------------------------------------------------------------------------------------------------------------------------------------------

Assuming that you have your access-key and secret key. and the local os has the 'aws configure' executed. Following are few useful CLI commands to perform
tasks using the CLI (without even logging in to the Management Console)

-----------------------------------------------------------------------------------------------------------------------------------------------------------
S3 - CLI
-----------------------------------------------------------------------------------------------------------------------------------------------------------

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: ls  :   The ls command is used to list the buckets or the contents of the buckets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   List existing S3 buckets on your account
    Command :   aws s3 ls

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls
    2023-02-12 18:59:47 samarth-ashish-aws-developer-021223
    */
    *******************************************************************************************************************************************************

    SCN#02  :   List all the files inside a S3 bucket
    Command :   aws s3 ls s3://samarth-ashish-aws-developer-021223
    Syntax  :   aws s3 ls s3://<bucket-name>

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-14 20:46:49          6 Test-File.txt.txt
    */
    *******************************************************************************************************************************************************

    SCN#03  :   List the contents of child directory in a S3 Bucket
    Command :   aws s3 ls s3://samarth-ashish-aws-developer-021223/my_multi_upload/
    Syntax  :   aws s3 ls s3://<bucket_name>/<child_dir_name>/
    Note    :   a '/' is needed at the end, otherwise, S3 will only show the result as the child directory instead of the files inside it

    /*
    C:\Users\samarth\Downloads>aws s3 ls s3://samarth-ashish-aws-developer-021223/my_multi_upload/
    2023-02-15 06:32:41          1 1.txt
    2023-02-15 06:32:41          1 2.txt
    2023-02-15 06:32:41          1 3.txt
    */    
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: cp  :   The cp command simply copies the data to and from S3 buckets. It can be used to copy files from local to S3, from S3 to local, and between 
            two S3 buckets. There are a lot of other parameters that you can supply with the commands.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Copy a single file from local directory to S3 bucket
    command :   aws s3 cp Test-File.txt s3://samarth-ashish-aws-developer-021223
    Syntax  :   aws s3 cp <local_file_name_in_current_dir> s3://<bucket-name>

    /*
    C:\Users\samarth\Downloads\aws s3 cp Test-File.txt.txt s3://samarth-ashish-aws-developer-021223
    2023-02-14 20:46:49          6 Test-File.txt.txt
    */
    *******************************************************************************************************************************************************

    SCN#02  :   Copy all files from local directory to S3 bucket
    Command :   aws s3 cp . s3://samarth-ashish-aws-developer-021223 --recursive
    Syntax  :   aws s3 cp <current_directory> s3://<bucket_name> --recursive

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 cp . s3://samarth-ashish-aws-developer-021223 --recursive
    upload: .\3.txt to s3://samarth-ashish-aws-developer-021223/3.txt
    upload: .\1.txt to s3://samarth-ashish-aws-developer-021223/1.txt
    upload: .\2.txt to s3://samarth-ashish-aws-developer-021223/2.txt
    */
    *******************************************************************************************************************************************************

    SCN#03  :   Copy a directory (having multiple files) to a S3 Bucket in a sub-directory
    Command :   s3 cp my_multi_upload s3://samarth-ashish-aws-developer-021223/my_multi_upload --recursive
    Syntax  :   s3 cp <local_folder_name_to_be_uploaded> s3://<bucket_name>/<new_folder_name> --recursive

    /*
    C:\Users\samarth\Downloads>aws s3 cp my_multi_upload s3://samarth-ashish-aws-developer-021223/my_multi_upload --recursive
    upload: my_multi_upload\3.txt to s3://samarth-ashish-aws-developer-021223/my_multi_upload/3.txt
    upload: my_multi_upload\1.txt to s3://samarth-ashish-aws-developer-021223/my_multi_upload/1.txt
    upload: my_multi_upload\2.txt to s3://samarth-ashish-aws-developer-021223/my_multi_upload/2.txt 
    */
    *******************************************************************************************************************************************************

    SCN#04  :   Copy a single file from local directory to S3 bucket - IA (infrequent Access)
    Command :   aws s3 cp file_name.txt s3://bucket_name/file_name_2.txt --storage-class STANDARD_IA 
    *******************************************************************************************************************************************************

    SCN#05  :   Copy data between s3 buckets
    Command :   aws s3 cp s3://samarth-ashish-aws-developer-021223/5.txt s3://samarth-ashish-aws-developer-021523
    Syntax  :   aws s3 cp s3://<bucket_name_1>/<file_to_be_copied_over> s3://<bucket_name_2>

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls
    2023-02-12 18:59:47 samarth-ashish-aws-developer-021223
    2023-02-15 07:05:06 samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-15 07:10:21          1 1.txt
    2023-02-15 07:10:21          1 2.txt
    2023-02-15 07:10:21          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 cp s3://samarth-ashish-aws-developer-021223/5.txt s3://samarth-ashish-aws-developer-021523
    copy: s3://samarth-ashish-aws-developer-021223/5.txt to s3://samarth-ashish-aws-developer-021523/5.txt

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021523
    2023-02-15 07:11:37          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    */


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: mv  :   The mv command simply moves the data to and from S3 buckets. Just like the cp command, mv command is used to move data from local to S3, S3 to local, 
            or between two S3 buckets.
            The only difference between the mv and the cp command is that when using the mv command the file is deleted from the source. AWS moves this file to 
            the destination. There are a lot of options that you can specify with the command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Move a specific file from local storage to s3 bucket
    Command :   aws s3 mv 3.txt s3://samarth-ashish-aws-developer-021223/
    Syntax  :   aws s3 mv <local_file_name> s3://<bucket_name>/
    Note    :   The difference between 'cp' and 'mv' is: mv will delete the file from the source and place it in s3 bucket, while cp does not delete the 
                file from the source

    /*
    C:\Users\samarth\Downloads\my_multi_upload>dir
    Volume in drive C has no label.
    Volume Serial Number is 00AF-4A73

    Directory of C:\Users\samarth\Downloads\my_multi_upload

    02/14/2023  08:50 PM    <DIR>          .
    02/14/2023  08:50 PM    <DIR>          ..
    02/14/2023  08:51 PM                 1 1.txt
    02/14/2023  08:51 PM                 1 2.txt
    02/14/2023  08:51 PM                 1 3.txt
                3 File(s)              3 bytes
                2 Dir(s)  409,548,005,376 bytes free

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 mv 3.txt s3://samarth-ashish-aws-developer-021223/
    move: .\3.txt to s3://samarth-ashish-aws-developer-021223/3.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>dir
    Volume in drive C has no label.
    Volume Serial Number is 00AF-4A73

    Directory of C:\Users\samarth\Downloads\my_multi_upload

    02/15/2023  06:49 AM    <DIR>          .
    02/15/2023  06:49 AM    <DIR>          ..
    02/14/2023  08:51 PM                 1 1.txt
    02/14/2023  08:51 PM                 1 2.txt
                2 File(s)              2 bytes
                2 Dir(s)  409,547,026,432 bytes free

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-15 06:49:01          1 3.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    */
    *******************************************************************************************************************************************************

    SCN#02  :   Move a specific file from s3 bucket to local storage
    Command :   aws s3 mv s3://samarth-ashish-aws-developer-021223/3.txt 5.txt
    Syntax  :   aws s3 mv s3://<bucket_name>/<s3_file_name> <new_file_name>

    /*
    C:\Users\samarth\Downloads\my_multi_upload>dir
    Volume in drive C has no label.
    Volume Serial Number is 00AF-4A73

    Directory of C:\Users\samarth\Downloads\my_multi_upload

    02/15/2023  06:49 AM    <DIR>          .
    02/15/2023  06:49 AM    <DIR>          ..
    02/14/2023  08:51 PM                 1 1.txt
    02/14/2023  08:51 PM                 1 2.txt
                2 File(s)              2 bytes
                2 Dir(s)  409,545,854,976 bytes free

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-15 06:49:01          1 3.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 mv s3://samarth-ashish-aws-developer-021223/3.txt 5.txt
    move: s3://samarth-ashish-aws-developer-021223/3.txt to .\5.txt

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>dir
    Volume in drive C has no label.
    Volume Serial Number is 00AF-4A73

    Directory of C:\Users\samarth\Downloads\my_multi_upload

    02/15/2023  06:55 AM    <DIR>          .
    02/15/2023  06:55 AM    <DIR>          ..
    02/14/2023  08:51 PM                 1 1.txt
    02/14/2023  08:51 PM                 1 2.txt
    02/15/2023  06:49 AM                 1 5.txt
                3 File(s)              3 bytes
                2 Dir(s)  409,545,535,488 bytes free

    C:\Users\samarth\Downloads\my_multi_upload>
    */
    *******************************************************************************************************************************************************

    SCN#03  :   Move a specific file from one S3 bucket to another s3 bucket
    Command :   aws s3 mv s3://samarth-ashish-aws-developer-021223/2.txt s3://samarth-ashish-aws-developer-021523
    Syntax  :   aws s3 mv s3://<bucket_name_1>/<file_name_to_be_moved> s3://<bucket_name_2>

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls
    2023-02-12 18:59:47 samarth-ashish-aws-developer-021223
    2023-02-15 07:05:06 samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-15 07:10:21          1 1.txt
    2023-02-15 07:10:21          1 2.txt
    2023-02-15 07:10:21          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021523
    2023-02-15 07:11:37          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 mv s3://samarth-ashish-aws-developer-021223/2.txt s3://samarth-ashish-aws-developer-021523
    move: s3://samarth-ashish-aws-developer-021223/2.txt to s3://samarth-ashish-aws-developer-021523/2.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-15 07:10:21          1 1.txt
    2023-02-15 07:10:21          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021523
    2023-02-15 07:14:19          1 2.txt
    2023-02-15 07:11:37          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    */
    *******************************************************************************************************************************************************

    SCN#04  :   Move a specific file from local to s3 bucket -IA (Infrequent Access)
    Command :   aws s3 mv file_name.txt s3://bucket_name/file_name_2.txt --storage-class STANDARD_IA 


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: rm  :   The rm command is simply used to delete the objects in S3 buckets. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Remove a single file from S3 bucket
    Command :   aws s3 rm s3://samarth-ashish-aws-developer-021223/Test-File.txt.txt
    Syntax  :   aws s3 rm s3://<bucket_name>/file_name

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 rm s3://samarth-ashish-aws-developer-021223/Test-File.txt.txt
    delete: s3://samarth-ashish-aws-developer-021223/Test-File.txt.txt
    */
    *******************************************************************************************************************************************************

    SCN#02  :   Remove all files from the S3 bucket
    Command :   aws s3 rm s3://samarth-ashish-aws-developer-021223/ --recursive
    Syntax  :   aws s3 rm s3://<bucket_name> --recursive

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 rm s3://samarth-ashish-aws-developer-021223/ --recursive
    delete: s3://samarth-ashish-aws-developer-021223/1.txt
    delete: s3://samarth-ashish-aws-developer-021223/2.txt
    delete: s3://samarth-ashish-aws-developer-021223/3.txt
    */
    *******************************************************************************************************************************************************

    SCN#03  :   Remove specific files from the S3 bucket
    Command :   aws s3 rm s3://samarth-ashish-aws-developer-021223/ --recursive --exclude "3.txt"
    Syntax  :   aws s3 rm s3://<bucket_name> --recursive --exclude "Filename-You-Wish-do-not-delete"

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-14 21:14:23          1 1.txt
    2023-02-14 21:14:23          1 2.txt
    2023-02-14 21:14:23          1 3.txt

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 rm s3://samarth-ashish-aws-developer-021223/ --recursive --exclude "3.txt"
    delete: s3://samarth-ashish-aws-developer-021223/1.txt
    delete: s3://samarth-ashish-aws-developer-021223/2.txt

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-14 21:14:23          1 3.txt
    */

    Command :   aws s3 rm s3://samarth-ashish-aws-developer-021223 --recursive --include "1.txt" --include "2.txt" --exclude "3.txt"
    Syntax  :   aws s3 rm s3://<bucket_name> --recursive --include "Filename-you-wish-to-delete" --exclude "Filename-you-wish-to-not-delete"

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-14 21:22:52          1 1.txt
    2023-02-14 21:22:52          1 2.txt
    2023-02-14 21:22:52          1 3.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 rm s3://samarth-ashish-aws-developer-021223 --recursive --include "1.txt" --include "2.txt" --exclude "3.txt"
    delete: s3://samarth-ashish-aws-developer-021223/1.txt
    delete: s3://samarth-ashish-aws-developer-021223/2.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-14 21:22:52          1 3.txt
    */
    *******************************************************************************************************************************************************

    SCN#04  :   Empty a S3 bucket
    Command :   aws s3 rm s3://samarth-ashish-aws-developer-021223 --recursive
    Syntax  :   aws s3 rm s3://<bucket_name> --recursive

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223
    2023-02-14 21:22:52          1 3.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 rm s3://samarth-ashish-aws-developer-021223 --recursive
    delete: s3://samarth-ashish-aws-developer-021223/3.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls s3://samarth-ashish-aws-developer-021223

    C:\Users\samarth\Downloads\my_multi_upload>
    */
    *******************************************************************************************************************************************************
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: mb  :   The mb command is simply used to create new S3 buckets. This is a fairly simple command but to create new buckets, the name of the new bucket 
            should be unique across all the S3 buckets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Create a new bucket in S3
    Command :   aws s3 mb s3://samarth-ashish-aws-developer-021523
    Syntax  :   aws s3 mb s3://<new_bucket_name>

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 mb s3://samarth-ashish-aws-developer-021523
    make_bucket: samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls
    2023-02-12 18:59:47 samarth-ashish-aws-developer-021223
    2023-02-15 07:05:06 samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>
    */

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: rb  :   The rb command is simply used to delete S3 buckets
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Remove a s3 bucket
    Command :   aws s3 rb s3://samarth-ashish-aws-developer-021523              [If the bucket is empty]
    Syntax  :   aws s3 rb s3://<bucket_name_to_be_deleted>

    Command :   aws s3 rb s3://samarth-ashish-aws-developer-021523 --force      [If the bucket is not empty]
    Syntax  :   aws s3 rb s3://<bucket_name_to_be_deleted> --force

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls
    2023-02-12 18:59:47 samarth-ashish-aws-developer-021223
    2023-02-15 07:05:06 samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 rb s3://samarth-ashish-aws-developer-021523
    remove_bucket failed: s3://samarth-ashish-aws-developer-021523 An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 rb s3://samarth-ashish-aws-developer-021523 --force
    delete: s3://samarth-ashish-aws-developer-021523/1.txt
    delete: s3://samarth-ashish-aws-developer-021523/5.txt
    delete: s3://samarth-ashish-aws-developer-021523/2.txt
    remove_bucket: samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls
    2023-02-12 18:59:47 samarth-ashish-aws-developer-021223

    C:\Users\samarth\Downloads\my_multi_upload>
    */

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: sync    :   The sync command copies and updates files from the source to the destination just like the cp command. It is important that we understand 
                the difference between the cp and the sync command. When you use cp it copies data from source to destination even if the data already exists 
                in the destination.
                It will also not delete files from the destination if they are deleted from the source. However, sync looks at the destination before copying 
                your data and only copies the new and updated files. The sync command is similar to committing and pushing changes to a remote branch in git. 
                The sync command offers a lot of options to customize the command. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Sync files between two s3 buckets
    Command :   aws s3 sync s3://samarth-ashish-aws-developer-021223 s3://samarth-ashish-aws-developer-021523
    Syntax  :   aws s3 sync s3://<source_bucket_name> s3://<target_bucket_name>

    /*
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls
    2023-02-12 18:59:47 samarth-ashish-aws-developer-021223
    2023-02-15 07:05:06 samarth-ashish-aws-developer-021523

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls samarth-ashish-aws-developer-021223
    2023-02-15 07:10:21          1 1.txt
    2023-02-15 07:10:21          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls samarth-ashish-aws-developer-021523
    2023-02-15 07:14:19          1 2.txt
    2023-02-15 07:11:37          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 sync s3://samarth-ashish-aws-developer-021223 s3://samarth-ashish-aws-developer-021523
    copy: s3://samarth-ashish-aws-developer-021223/1.txt to s3://samarth-ashish-aws-developer-021523/1.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls samarth-ashish-aws-developer-021523
    2023-02-15 07:38:04          1 1.txt
    2023-02-15 07:14:19          1 2.txt
    2023-02-15 07:11:37          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>aws s3 ls samarth-ashish-aws-developer-021223
    2023-02-15 07:10:21          1 1.txt
    2023-02-15 07:10:21          1 5.txt

    C:\Users\samarth\Downloads\my_multi_upload>
    */ 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: presign :   The presign command generates a pre-signed URL for a key in the S3 bucket. You can use this command to generate URLs that can be used by 
                others to access a file in the specified S3 bucket key.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Generate a pre-signed url
    Command :   aws s3 presign s3://bucket_name/samplePrefix/file_name.png --expires-in 3600
    
    /*
    Sample Output:
    Output:
    https://s3.ap-south-1.amazonaws.com/bucket_name/samplePrefix/file_name.png?
    X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA4MCZT73PAX7ZMVFW%2F20220314%2Fap-south-1%2Fs3%2Faws4_request&X-Amz-Date=20220314T054113Z&X-Amz-Expires=3600
    &X-Amz-SignedHeaders=host&X-Amz-Signature=f14608bbf3e1f9f8d215eb5b439b87e167b1055bcd7a45c13a33debd3db1be96
    */

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
s3: website:    The website command is used to configure the S3 static website hosting for your bucket.
                You specify the index and the error files and the S3 gives you a URL where you can view the file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    SCN#01  :   Configure a static webssite
    Command :   aws s3 website s3://bucket_name --index-document index.html --error-document error.html

-----------------------------------------------------------------------------------------------------------------------------------------------------------
STS - CLI
-----------------------------------------------------------------------------------------------------------------------------------------------------------
STS: Security Token Service

AWS STS is an AWS service that allows you to request temporary security credentials for your AWS resources, for IAM authenticated users and users that are 
authenticated in AWS such as federated users via OpenID or SAML2.0
You use STS to provide trusted users with temporary access to resources via API calls, your AWS console or the AWS command line interface (CLI)
The temporary security credentials work exactly like regular long term security access key credentials allocated to IAM users only the lifecycle of the access 
credentials is shorter.

Typically an application will make an API request to AWS STS endpoint for credentials, these access keys are not stored with the user, they are instead 
dynamically generated by STS when the request is made. The STS generated credentials will expire at which point the user can request new ones as long as they 
still have permission to do so.

Once the generated credentials expire they cannot be reused which reduces the risk of having your resource access compromised and removes the need to embed 
security tokens within your code. The STS token lifecycle is determined by you and can be anywhere from 15 minutes to 36 hours

AWS STS security tokens are typically used for identity federation, providing cross-account access and for resources related to EC2 instances that require access 
by other applications

Usage on CLI:
Scenario: If you run a command on the CLI which generates and error with an encoded failure message, we can use STS to decode that message
Command : aws sts decode-authorization-message -encoded-message <paste your encoded message here>

-----------------------------------------------------------------------------------------------------------------------------------------------------------
EC2 Instance Metadata - CLI
-----------------------------------------------------------------------------------------------------------------------------------------------------------
AWS EC2 instance metadata allows EC2 instance to 'learn about themselves' without using an IAM role for that purpose. The URL for the metadata endpoint is
http://169.254.169.254/latest/meta-data/ and it only works from inside the ec2 instance.

Note: You can retrieve the IAM role name from the metadata, but you cannot retrieve the IAM policy.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
EC2 :   Metadata    :   Check all available options via meta-data api
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[ec2-user@ip-172-31-62-238 ~]$ curl http://169.254.169.254/latest/meta-data/
ami-id
ami-launch-index
ami-manifest-path
block-device-mapping/
events/
hibernation/
hostname
iam/
identity-credentials/
instance-action
instance-id
instance-life-cycle
instance-type
local-hostname
local-ipv4
mac
managed-ssh-keys/
metrics/
network/
placement/
profile
public-hostname
public-ipv4
public-keys/
reservation-id
security-groups
services/
system[ec2-user@ip-172-31-62-238 ~]$